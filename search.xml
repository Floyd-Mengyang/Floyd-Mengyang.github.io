<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[How to use Hexo]]></title>
      <url>%2F2017%2F04%2F10%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[compile DeepLab_v2 on Ubuntu 14.04.5 with Cuda 8.0]]></title>
      <url>%2F2017%2F04%2F10%2Fcompile-DeepLab-v2-on-Ubuntu-14-04-5-with-Cuda-8-0%2F</url>
      <content type="text"><![CDATA[Problem:error: function &quot;atomicAdd(double *, double)&quot; has already been defined Somebody get this error while trying to compile the cafffe derivative DeepLab_v2 on Ubuntu 14.04.5 with Cuda 8.0. Maybe DeepLab_v2 compiles fine on another computer that has Cuda 7.5. Solution:Analysis:CUDA 8.0 provides a definition of atomicAdd on double quantities that was not present in previous CUDA toolkits. The code you are working with also apparently provides its own definition/implementation, and this is the source of the error message. The correct fix is to make source code changes to the software in question to make it compatible with CUDA 8. â€“Robert Crovella How to do:The solution provided by @Robert Crovella works for me. I had to modify the file common.cuh from the DeepLab_v2 master branch in the following way: 12345678910111213141516171819202122#ifndef CAFFE_COMMON_CUH_#define CAFFE_COMMON_CUH_#include &lt;cuda.h&gt; #if !defined(__CUDA_ARCH__) || __CUDA_ARCH__ &gt;=600 #else static __inline__ __device__ double atomicAdd(double *address, double val) &#123; unsigned long long int* address_as_ull = (unsigned long long int*)address; unsigned long long int old = *address_as_ull, assumed; if (val==0.0) return __longlong_as_double(old); do &#123; assumed = old; old = atomicCAS(address_as_ull, assumed, __double_as_longlong(val +__longlong_as_double(assumed))); &#125; while (assumed != old); return __longlong_as_double(old); &#125; #endif#endif]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[make runtest error]]></title>
      <url>%2F2017%2F04%2F10%2Fmake-runtest-error%2F</url>
      <content type="text"><![CDATA[caffe users:1Erro during compilation (make runtest): "error while loading shared libraries: libcudart.so.6.5" For all the other folks who stop by looking for a solution: Try:32-bit:1$ sudo ldconfig /usr/local/cuda/lib 64-bit:1$ sudo ldconfig /usr/local/cuda/lib64 source: http://stackoverflow.com/questions/10808958/why-cant-libcudar-so-4-be-found-when-compiling-the-cuda-samples-under-ubuntu]]></content>
    </entry>

    
  
  
</search>
